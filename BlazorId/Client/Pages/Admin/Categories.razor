@page "/categories"
@using BlazorId.Shared;
@inject HttpClient client;

<h3>Categories</h3>
@if (categories == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    @if (categories[0].ParentId > 0)
    {
        <button class="btn btn-success"
        @onclick="(() => ShowParent(categories[0].ParentId))">
            Parent
        </button>
    }
    <div class="container-fluid">
        <div class="row">
            @foreach (var category in categories)
            {
                <div class="col-sm-12 col-md-6 col-lg-4">
                    <div class="card">
                        <div class="card-body">
                            <input class="form-control" type="text"
                                   placeholder="Name"
                            @bind="@category.Name" />
                            <button class="btn btn-success"
                            @onclick="(() => Update(category.Id,category))">
                                Update
                            </button>
                            <button class="btn btn-danger"
                            @onclick="(() => DeleteCategory(category))">
                                Delete
                            </button>
                            <button class="btn btn-primary"
                            @onclick="(() => AddChild(category.Id))">
                                Add sub-category
                            </button>
                            @if (category.ExistChildren)
                            {
                                <button class="btn btn-success"
                                @onclick="(() => ShowChildren(category.Id))">
                                    Sub-categories
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
@if (ShowPopup)
{
    <!-- This is the popup to create or edit a category -->
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Create new sub-category</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close"
                    @onclick="ClosePopup">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <!-- Edit form for the current category -->
                <input class="form-control" type="text"
                       placeholder="Name"
                @bind="@objCategory.Name" />
                <!-- Button to save the category -->
                <button class="btn btn-primary"
                @onclick="(() => Insert(objCategory))">
                    Save Category
                </button>
            </div>
        </div>
    </div>
}

@code {
    private List<Category>? categories;
    private Category objCategory = new Category();
    private int IdParent = 0;
    // To enable showing the Popup
    bool ShowPopup = false;

    protected override async Task OnInitializedAsync()
    {
        categories = await client.GetFromJsonAsync<List<Category>>("api/Categories/Parent/" + IdParent);
        foreach (Category cat in categories!)
        {
            var children = await client.GetFromJsonAsync<List<Category>>("api/Categories/Parent/" + cat.Id);
            cat.ExistChildren = (children!.Count() != 0);
        }
    }

    async Task Update(int id, Category category)
    {
        await client.PutAsJsonAsync("api/Categories/" + id, category);       
        await OnInitializedAsync();
    }

    async Task ShowParent(int id)
    {
        var cat = await client.GetFromJsonAsync<Category>("api/Categories/" + id);
        IdParent = cat!.ParentId;
        await OnInitializedAsync();
    }


    async Task ShowChildren(int id)
    {
        IdParent = id;
        await OnInitializedAsync();
    }


    async Task AddChild(int id)
    {
        objCategory.ParentId = id;
        ShowPopup = true;
    }


    async Task Insert(Category category)
    {
        await client.PostAsJsonAsync("api/Categories", category);
        ClosePopup();
        await OnInitializedAsync();
        
    }

    async Task DeleteCategory(Category category)
    {
        await client.DeleteAsync($"api/Categories/{category.Id}");
        var cat = await client.GetFromJsonAsync<Category>("api/Categories/" + category.ParentId);
        IdParent = cat!.ParentId;
        await OnInitializedAsync();
    }

    void ClosePopup()
    {
        ShowPopup = false;
    }
}


